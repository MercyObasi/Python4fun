def nextDay(year, month, day):
    if day < days_in_month(year, month):
        day += 1
    else:
        if month < 12:
            day = 1
            month += 1
        else:
            month, day = 1,1
            year += 1
        
    return year, month, day

def date_before(year1, month1, day1, year2, month2, day2):
    if year1 < year2:
        return True
    elif year1 == year2:
        if month1 < month2:
            return True
        elif month1 == month2:
            if day1 < day2:
                return True
        
    
    return False

def days_in_month(year, month):
    if month in (4, 6, 9, 11):
        return 30
    else:
        if month == 2 and LeapYear(year) == False:
            return 28
        else:
            if month == 2 and LeapYear(year) == True:
                return 29
    
    return 31

def LeapYear(year):
    if year % 4 == 0 or year % 400 == 0 and year % 100 != 0:
        return True
    return False

def daysBetweenDates(year1, month1, day1, year2, month2, day2):
    """
    Calculates the number of days between two dates.
    """
    #assert date_before(year1, month1, day1, year2, month2, day2)
    if year1 == year2 and month1 == month2 and day1 == day2:
         return 0
    counter_days = 0
    while date_before(year1, month1, day1, year2, month2, day2) :
        year1, month1, day1 = nextDay(year1, month1, day1)
        counter_days += 1
    # TODO - by the end of this lesson you will have
    #  completed this function. You do not need to complete
    #  it yet though! 
    
    return counter_days

def testDaysBetweenDates():
    
    # test same day
    assert(daysBetweenDates(2017, 12, 30,
                              2017, 12, 30) == 0)
    # test adjacent days
    assert(daysBetweenDates(2017, 12, 30, 
                              2018, 1, 1) == 2)
    # test new year
    assert(daysBetweenDates(2017, 12, 30, 
                              2017, 12,  31)  == 1)
    # test full year difference
    assert(daysBetweenDates(2012, 6, 29,
                              2013, 6, 29)== 365)
    #test leap year
    assert(daysBetweenDates(2020, 1, 13,
                             2021, 1, 13)== 366)
    
    print("Congratulations! Your daysBetweenDates")
    print("function is working correctly!")
    
testDaysBetweenDates()
